#include <cmath>
#include <iostream>
#include<iomanip>

using namespace std;

const int m=4,p=1; // —á–∏—Å–ª–æ —É—Ä. –∏ –ø–æ—Ä—è–¥.–º–µ—Ç–æ–¥–∞

//===================================================================================

double norma (int m, double y1[],double y2[])
{
	double sum=0;
	for(int i=0; i<m; i++)
		sum+=pow(y1[i]-y2[i],2);
	return sqrt(sum);
}

double ut(double x) //fun. tochnogo reshenija (esli dan–æ)
{
	double u = (exp(5.*x-5.)*sin(x)+exp(5.*x+5.)*cos(x))/200.;
	return u;
}

void fun(double u[m], double x, double f[m]) {
	f[0]=u[1]; // —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∞–≤–æ–π —á–∞—Å—Ç–∏ –û–î–£
	f[1]=u[2];
	f[2]=u[3];
	f[3]=-5.*u[3]-u[2]-120.*u[1]-650.*u[0]+exp(5*x-5)*(11.5*sin(x)+4.9*cos(x));
}

void FormRK(double y0[m], double x, double h, double y[m])
{
	double f[m];
	fun(y0, x, f);
	for(int i=0;i<m;++i)// —Ñ–æ—Ä–º—É–ª—ã –º–µ—Ç. —ç–π–ª–µ—Ä–∞ –Ω–∞ —à–∞–≥–µ h
		y[i]=y[i]+h*f[i];
}

void shag(double y[m], double x,double &h, double eps)//vybor shaga
{
	double yh[m],yhh[m],el;
	for(int i=0;i<m;++i) // —Ñ-—è –∞–ª–≥–æ—Ä. –∞–≤—Ç–æ–º–∞—Ç.–≤—ã–±–æ—Ä–∞ —à–∞–≥–∞ ùíâùíå
	{
		FormRK(y,x,h,yh);
		FormRK(y,x,h/2,yhh);
		FormRK(yhh,x+h/2,h/x,yhh);
		el=norma(m,yhh,yh)/(pow(2,p)-1);
		if(el>eps)h/=2;
		else if(el<eps/pow(2,p+1)) {h*=2; break;}
		else break;
	}
}
// –§—É–Ω–∫—Ü–∏—è –º–µ—Ç–æ–¥–∞ RK —Å –≤—ã–≤–æ–¥–æ–º —Ä–µ—à–µ–Ω–∏—è –≤ –∫–∞–∂–¥–æ–π —Ç–æ—á–∫–µ —Å–µ—Ç–∫–∏.
void MetRK2(double y[m], double x, double xN, double h, double eps)
{
	cout<<"x"<<"\ty[0]"<<"\ty[1]"<<"\tut"<<"\th"<<"\tNorma"<<endl;
	cout<<fixed<<setprecision(4)<<x<<" "<<y[0]<<" "<<y[1]<<" "<<ut(x)<<" "<<h<<" "<<"\t..."<<endl;// –≤—ã–≤. –Ω–∞—á.–∑–Ω–∞—á–µ–Ω–∏–π
	for (;;)
	{
		shag(y,x,h,eps);
		if((xN-x)<=h) {h=xN-x;} //—É—Ç–æ—á–Ω. –¥–ª–∏–Ω—ã –ø–µ—Ä–µ–º–µ–Ω.—à–∞–≥–∞ –ø–µ—Ä–µ–¥ –∫–æ–Ω—Ü–æ–º –æ—Ç—Ä–µ–∑–∫–∞ –∞—Ä–≥—É–º.
		FormRK(y,x,h,y);
		x+=h;
		cout<<fixed<<setprecision(4)<<x<<" " <<y[0]<<" "<< y[1]<<" "<< ut(x)<<" "<<h<<"\t..."<<endl;
		if(x==xN) break;
	}
	cout<<fixed<<"\teps="<<eps<<endl;
	cout<<fixed<<"\th="<<h<<endl;
}

//======================================================================================

void MetRK(double y[m], double x, double xN, double h, double eps)
{
	double el; // –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è –Ω–∞ —à–∞–≥–µ
	cout<<setw(10)<<"x"<<setw(10)<<"y[0]"<<setw(10) //–∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
	<<"y[1]"<<setw(10)<<"ut"<<setw(10)<< "h"<<setw(10)<<"el"<<endl;
	cout<<setw(10)<<setprecision(4)<<x<<setw(10)<<y[0]<<setw(10)<<y[1]<<setw(10)<<ut(x)<<setw(10)<< h<<endl;
	for(;;)
	{
		if(x>=xN)
			break;
		FormRK(y, x, h, y);
		x += h;
		el = fabs(y[0]-ut(x)); //–ø–æ–≥—Ä–µ—â–Ω–æ—Å—Ç—å y[0] —Ä–µ—à–µ–Ω–∏—è –Ω–∞ —à–∞–≥–µ
		cout<<setw(10)<<setprecision(4)<<x<<setw(10)<<y[0]<<setw(10)<<y[1]<<setw(10)<<ut(x)<<setw(10)<<h<<setw(10)<<el<<endl;
	}
	cout<<fixed<<"\n \t eps="<<eps<<endl;
	cout<<fixed<<" \t h="<<h<<endl;
}

//===================================================================================

int main() {
	//int N=11.; //–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤
	double x0 = 0 ,xN = 1, h=1.; // –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ —à–∞–≥
	cout<<"h="<<h<<endl;
	double eps = h; //–ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å
	double y0[m]={-1,1,-2,0}; //–∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
	//MetRK(y0, x0, xN, h, eps); // –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è
	cout<<"==============================="<<endl;
	MetRK2(y0,x0,xN,h,eps);
	return 0;
}
